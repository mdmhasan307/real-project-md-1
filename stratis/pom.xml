<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.5.0</version> <!-- variables are prohibited -->
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <name>stratis-root</name>
  <groupId>mil.usmc.mls2.stratis</groupId>
  <artifactId>stratis</artifactId>
  <version>704.01.05</version>
  <packaging>pom</packaging>

  <modules>
    <module>Shared</module>
    <module>EXMLService</module>
    <module>GCSSMCWS</module>
    <module>application</module>
  </modules>

  <distributionManagement>
    <repository>
      <id>mls2.nexus.tacticaledge.us</id>
      <name>Tactical Edge Nexus Server - MLS2</name>
      <url>https://nexus.tacticaledge.us/repository/mls2/</url>
    </repository>
  </distributionManagement>

  <repositories>
    <repository>
      <id>oracle-maven</id>
      <name>Tactical Edge Nexus Server - Oracle Maven Proxy</name>
      <url>https://nexus.tacticaledge.us/repository/oracle-maven/</url>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
        <updatePolicy>never</updatePolicy>
      </snapshots>
    </repository>
    <repository>
      <id>nexus.tacticaledge.us</id>
      <name>Tactical Edge Nexus Server</name>
      <url>https://nexus.tacticaledge.us/repository/public-repositories/</url>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
        <updatePolicy>never</updatePolicy>
      </snapshots>
    </repository>
    <repository>
      <id>mls2.nexus.tacticaledge.us</id>
      <name>Tactical Edge Nexus Server - MLS2</name>
      <url>https://nexus.tacticaledge.us/repository/mls2/</url>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
        <updatePolicy>never</updatePolicy>
      </snapshots>
    </repository>
    <repository>
      <id>mls2external.nexus.tacticaledge.us</id>
      <name>Tactical Edge Nexus Server - MLS2 External Artifacts</name>
      <url>https://nexus.tacticaledge.us/repository/mls2external/</url>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
        <updatePolicy>never</updatePolicy>
      </snapshots>
    </repository>
    <repository>
      <id>mls2innovation.nexus.tacticaledge.us</id>
      <name>Tactical Edge Nexus Server - MLS2 Innovation Artifacts</name>
      <url>https://nexus.tacticaledge.us/repository/mls2innovation/</url>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
        <updatePolicy>never</updatePolicy>
      </snapshots>
    </repository>
  </repositories>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- libraries (excludes plugins) -->
    <!-- SBO = Spring Boot Override -->
    <java.version>1.8</java.version>

    <asm.version>7.2</asm.version>
    <apache-standard-taglibs.version>1.2.5</apache-standard-taglibs.version>
    <bouncycastle.version>1.64</bouncycastle.version>
    <camel.version>3.9.0</camel.version>
    <common-beanutils.version>1.9.4</common-beanutils.version>
    <commons-collections4.version>4.4</commons-collections4.version>
    <commons-io.version>2.6</commons-io.version>
    <commons-lang.version>2.6</commons-lang.version>
    <cxf.version>3.3.6</cxf.version>
    <guava.version>29.0-jre</guava.version>
    <hazelcast.version>4.2</hazelcast.version> <!-- SBO -->
    <jawr.version>3.9</jawr.version>
    <logstash-logback-encoder.version>6.4</logstash-logback-encoder.version>
    <mapstruct.version>1.3.1.Final</mapstruct.version>
    <mls2-mils.version>0.9.9</mls2-mils.version>
    <oracle.jdbc-and-ucp.version>19.10.0.0</oracle.jdbc-and-ucp.version>
    <sitemesh.version>3.0.1</sitemesh.version>
    <spring-boot.version>2.5.0</spring-boot.version><!-- NOTICE: Always sync with spring-boot-starter-parent version -->
    <spring-boot-jasypt.version>3.0.3</spring-boot-jasypt.version>
    <spring-boot-camel.version>${camel.version}</spring-boot-camel.version>
    <cxf.version>3.3.6</cxf.version>
    <webjars.bootstrap.version>4.3.1</webjars.bootstrap.version>
    <webjars.jquery.version>3.5.1</webjars.jquery.version>
    <webjars.jquery-ui.version>1.12.1</webjars.jquery-ui.version>
    <webjars.font-awesome.version>5.14.0</webjars.font-awesome.version>
    <webjars.handlebars.version>4.7.6</webjars.handlebars.version>
    <webjars.es6-promise.version>4.2.8</webjars.es6-promise.version>
    <xmlsec.version>2.1.5</xmlsec.version>

    <!-- plugins -->
    <git-commit-id-plugin.version>4.0.0</git-commit-id-plugin.version>
    <jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>
    <maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>
    <maven-jaxb2-plugin.version>0.14.0</maven-jaxb2-plugin.version>
    <mysema-apt-maven-plugin.version>1.1.3</mysema-apt-maven-plugin.version>
    <owasp-dependency-check-maven-plugin.version>5.3.2</owasp-dependency-check-maven-plugin.version>
    <sonar-maven-plugin.version>3.7.0.1746</sonar-maven-plugin.version>
    <maven-jaxws-plugin.version>2.5</maven-jaxws-plugin.version>

    <!-- variables -->
    <jacocoArgLine/> <!-- default as empty (auto-populated during plugin execution) -->
    <maven-min-version>3.5.4</maven-min-version>
    <maven.build.timestamp.format>yyyy-MM-dd'T'HH-mm</maven.build.timestamp.format>
    <stratis.version>${project.version}</stratis.version>

    <!-- =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
    <!-- sonar properties -->
    <!-- =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
    <!-- use BASELINE to reset SONAR, otherwise leave commented to let the plugin handle the version -->
    <!-- <sonar.projectVersion>BASELINE</sonar.projectVersion> -->

    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>

    <!-- This will make Sonar pick up unit testing reports for all submodules in the same place (target folder in parent project) -->
    <sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    <sonar.scm.disabled>true</sonar.scm.disabled>
    <sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
    <sonar.sources/> <!-- override per module -->
    <sonar.tests/> <!-- override per module -->
    <sonar.dependencyCheck.reportPath>${project.basedir}/target/dependency-check-report.xml</sonar.dependencyCheck.reportPath>
    <sonar.dependencyCheck.htmlReportPath>${project.basedir}/target/dependency-check-report.html</sonar.dependencyCheck.htmlReportPath>
    <sonar.dependencyCheck.severity.critical>7.0</sonar.dependencyCheck.severity.critical>
    <sonar.dependencyCheck.severity.major>4.0</sonar.dependencyCheck.severity.major>

    <!-- Issues / Exclusions -->
    <!-- ignore common-java:DuplicatedBlocks as this cannot be suppressed via annotations -->
    <!-- Note: this does not work
    <sonar.issue.ignore.multicriteria>a</sonar.issue.ignore.multicriteria>
    <sonar.issue.ignore.multicriteria.a.ruleKey>common-java:DuplicatedBlocks</sonar.issue.ignore.multicriteria.a.ruleKey>
    <sonar.issue.ignore.multicriteria.a.resourceKey>**/*.java</sonar.issue.ignore.multicriteria.a.resourceKey>
    -->
    <!-- Exclude test classes for GCSS from sonar scans. these classes should also NOT be sent for fortify. -->
    <sonar.exclusions>
      application/test/**/*
    </sonar.exclusions>

  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.apache.camel.springboot</groupId>
        <artifactId>camel-jms-starter</artifactId>
        <version>${spring-boot-camel.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.camel.springboot</groupId>
        <artifactId>camel-spring-boot-starter</artifactId>
        <version>${spring-boot-camel.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-test-spring-junit5</artifactId>
        <version>${camel.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>3.0.2</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.database.jdbc</groupId>
        <artifactId>ojdbc8</artifactId>
        <version>${oracle.jdbc-and-ucp.version}</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.database.jdbc</groupId>
        <artifactId>ucp</artifactId>
        <version>${oracle.jdbc-and-ucp.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>2.3.3</version> <!-- conflict resolution -->
      </dependency>
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.2</version>
        <scope>provided</scope> <!-- global exclusion -->
      </dependency>
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>2.9</version>
      </dependency>
      <dependency>
        <groupId>org.javassist</groupId>
        <artifactId>javassist</artifactId>
        <version>3.24.0-GA</version> <!-- javassist: resolves dependency conflict -->
      </dependency>
      <dependency>
        <groupId>org.webjars</groupId>
        <artifactId>jquery</artifactId>
        <version>${webjars.jquery.version}</version>
      </dependency>

      <!-- java 8/9+ jaxb (api) -->
      <dependency>
        <groupId>jakarta.xml.bind</groupId>
        <artifactId>jakarta.xml.bind-api</artifactId>
        <version>${jakarta-xml-bind.version}</version>
      </dependency>
      <!-- java 8/9+: jaxws (ws api) -->
      <dependency>
        <groupId>jakarta.xml.ws</groupId>
        <artifactId>jakarta.xml.ws-api</artifactId>
        <version>${jakarta-xml-ws.version}</version>
      </dependency>

      <!-- Deconflict -->
      <dependency>
        <groupId>com.sun.istack</groupId>
        <artifactId>istack-commons-runtime</artifactId>
        <version>3.0.11</version>
      </dependency>

      <!-- conflict resolution -->
      <dependency>
        <groupId>org.codehaus.woodstox</groupId>
        <artifactId>stax2-api</artifactId>
        <version>4.2.1</version>
      </dependency>

      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-ws-security</artifactId>
        <version>${cxf.version}</version>
        <exclusions>
          <!-- exclude: not used -->
          <exclusion>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
          </exclusion>
          <!-- exclude: not used -->
          <exclusion>
            <groupId>org.apache.geronimo.javamail</groupId>
            <artifactId>geronimo-javamail_1.4_mail</artifactId>
          </exclusion>
          <!-- exclude: woodstox 5.0.3 in favor of 5.1.x+ from jaxws-rt -->
          <exclusion>
            <groupId>com.fasterxml.woodstox</groupId>
            <artifactId>woodstox-core</artifactId>
          </exclusion>
          <!-- exclude: prevent stax-api 3.1.x and 4.1.x conflicts caused by referenced neethi lib which depends on 3.1.x: https://issues.apache.org/jira/browse/CXF-7836 -->
          <exclusion>
            <groupId>org.codehaus.woodstox</groupId>
            <artifactId>woodstox-core-asl</artifactId>
          </exclusion>

        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-transports-http-jetty</artifactId>
        <version>${cxf.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.santuario</groupId>
        <artifactId>xmlsec</artifactId>
        <version>${xmlsec.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-jdk15on</artifactId>
        <version>${bouncycastle.version}</version>
      </dependency>
      <dependency>
        <groupId>org.ow2.asm</groupId>
        <artifactId>asm</artifactId>
        <version>${asm.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- lombok -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- spring boot starter -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- spring-boot-configuration -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
            <!-- for 3.1+ use this to ensure links are generated in IDEA console -->
            <forceJavacCompilerUse>true</forceJavacCompilerUse>
            <useIncrementalCompilation>false</useIncrementalCompilation>
            <annotationProcessorPaths>
              <!-- lombok -->
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
              </path>
              <!-- mapstruct -->
              <path>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
              </path>
              <!-- spring-boot-configuration -->
              <path>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${spring-boot.version}</version>
              </path>
            </annotationProcessorPaths>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <!-- OWASP: Dependency Check -->
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>${owasp-dependency-check-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>aggregate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Maven: Surefire (unit tests) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <!--          Java 9+ -->
          <!--          <argLine>-->
          <!--            @{jacocoArgLine} &#45;&#45;illegal-access=permit -Xms2048m -Xmx2048m -noverify-->
          <!--          </argLine>-->
          <argLine>
            @{jacocoArgLine} -Xms2048m -Xmx2048m -noverify
          </argLine>
        </configuration>

      </plugin>
      <!-- Jacoco -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <configuration>
          <destFile>${sonar.jacoco.reportPath}</destFile>
          <append>true</append>
          <propertyName>jacocoArgLine</propertyName>
        </configuration>
        <executions>
          <execution>
            <id>agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Sonar -->
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>${sonar-maven-plugin.version}</version>
      </plugin>
      <!-- Versions -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${versions-maven-plugin.version}</version>
        <configuration>
          <generateBackupPoms>false</generateBackupPoms>
        </configuration>
      </plugin>
      <!-- Maven: Failsafe (integration tests) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
        <!--        Java 9+ -->
        <!--        <configuration>-->
        <!--          <argLine>-->
        <!--            &#45;&#45;illegal-access=permit-->
        <!--          </argLine>-->
        <!--        </configuration>-->
      </plugin>
      <!-- Maven: Reports  -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.0.0</version>
      </plugin>
      <!-- Maven: Enforcer -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
        <executions>
          <execution>
            <id>enforce-no-snapshots</id>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <rules>
            <requireReleaseDeps>
              <message>No Snapshot references are permitted.</message>
              <onlyWhenRelease>true</onlyWhenRelease>
            </requireReleaseDeps>
            <bannedDependencies>
              <searchTransitive>true</searchTransitive>
            </bannedDependencies>
            <requireJavaVersion>
              <version>${java.version}</version>
            </requireJavaVersion>
            <requireMavenVersion>
              <version>${maven-min-version}</version>
            </requireMavenVersion>
          </rules>
          <fail>true</fail>
        </configuration>
      </plugin>
      <!-- Hibernate enhancement / instrumentation -->
      <plugin>
        <groupId>org.hibernate.orm.tooling</groupId>
        <artifactId>hibernate-enhance-maven-plugin</artifactId>
        <version>${hibernate.version}</version>
        <executions>
          <execution>
            <configuration>
              <failOnError>true</failOnError>
              <enableLazyInitialization>true</enableLazyInitialization>
              <enableDirtyTracking>true</enableDirtyTracking>
              <enableAssociationManagement>true</enableAssociationManagement>
              <enableExtendedEnhancement>false</enableExtendedEnhancement>
            </configuration>
            <goals>
              <goal>enhance</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
